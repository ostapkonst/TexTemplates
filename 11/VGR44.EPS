%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 110 15 398 193
%%HiResBoundingBox: 110 15 398 192.938
%%Creator: (Mathematica 4.0 for Microsoft Windows)
%%CreationDate: (Thursday, December 7, 2000) (17:05:23)
%%Title: Clipboard
%%DocumentNeededResources: font Math1Mono
%%+ font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Math1Mono
%%+ Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: Math1Mono
%%+ Courier
%%EndComments
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 207.938 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/Mnodistort true def
1.000000 1.000000 scale
110.000000 192.937500 translate
1.000000 -1.000000 scale
0.000000 0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		288.000000 def
/Mheight	177.937500 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.896825 0.793651 0.309576 17.0753 [
[.10317 .29708 -6 -9 ]
[.10317 .29708 6 0 ]
[.2619 .29708 -12 -9 ]
[.2619 .29708 12 0 ]
[.42063 .29708 -12 -9 ]
[.42063 .29708 12 0 ]
[.57937 .29708 -12 -9 ]
[.57937 .29708 12 0 ]
[.7381 .29708 -12 -9 ]
[.7381 .29708 12 0 ]
[.88433 .05345 -36 -4.5 ]
[.88433 .05345 0 4.5 ]
[.88433 .13882 -30 -4.5 ]
[.88433 .13882 0 4.5 ]
[.88433 .2242 -36 -4.5 ]
[.88433 .2242 0 4.5 ]
[.88433 .39495 -30 -4.5 ]
[.88433 .39495 0 4.5 ]
[.88433 .48033 -24 -4.5 ]
[.88433 .48033 0 4.5 ]
[.88433 .56571 -30 -4.5 ]
[.88433 .56571 0 4.5 ]
[.5 .63053 -14 0 ]
[.5 .63053 14 14 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.10317 .30958 m
.10317 .31583 L
s
[(-1)] .10317 .29708 0 1 Mshowa
.2619 .30958 m
.2619 .31583 L
s
[(-0.8)] .2619 .29708 0 1 Mshowa
.42063 .30958 m
.42063 .31583 L
s
[(-0.6)] .42063 .29708 0 1 Mshowa
.57937 .30958 m
.57937 .31583 L
s
[(-0.4)] .57937 .29708 0 1 Mshowa
.7381 .30958 m
.7381 .31583 L
s
[(-0.2)] .7381 .29708 0 1 Mshowa
.125 Mabswid
.14286 .30958 m
.14286 .31333 L
s
.18254 .30958 m
.18254 .31333 L
s
.22222 .30958 m
.22222 .31333 L
s
.30159 .30958 m
.30159 .31333 L
s
.34127 .30958 m
.34127 .31333 L
s
.38095 .30958 m
.38095 .31333 L
s
.46032 .30958 m
.46032 .31333 L
s
.5 .30958 m
.5 .31333 L
s
.53968 .30958 m
.53968 .31333 L
s
.61905 .30958 m
.61905 .31333 L
s
.65873 .30958 m
.65873 .31333 L
s
.69841 .30958 m
.69841 .31333 L
s
.77778 .30958 m
.77778 .31333 L
s
.81746 .30958 m
.81746 .31333 L
s
.85714 .30958 m
.85714 .31333 L
s
.06349 .30958 m
.06349 .31333 L
s
.02381 .30958 m
.02381 .31333 L
s
.93651 .30958 m
.93651 .31333 L
s
.97619 .30958 m
.97619 .31333 L
s
.25 Mabswid
0 .30958 m
1 .30958 L
s
.89683 .05345 m
.90308 .05345 L
s
[(-0.015)] .88433 .05345 1 0 Mshowa
.89683 .13882 m
.90308 .13882 L
s
[(-0.01)] .88433 .13882 1 0 Mshowa
.89683 .2242 m
.90308 .2242 L
s
[(-0.005)] .88433 .2242 1 0 Mshowa
.89683 .39495 m
.90308 .39495 L
s
[(0.005)] .88433 .39495 1 0 Mshowa
.89683 .48033 m
.90308 .48033 L
s
[(0.01)] .88433 .48033 1 0 Mshowa
.89683 .56571 m
.90308 .56571 L
s
[(0.015)] .88433 .56571 1 0 Mshowa
.125 Mabswid
.89683 .07052 m
.90058 .07052 L
s
.89683 .0876 m
.90058 .0876 L
s
.89683 .10467 m
.90058 .10467 L
s
.89683 .12175 m
.90058 .12175 L
s
.89683 .1559 m
.90058 .1559 L
s
.89683 .17297 m
.90058 .17297 L
s
.89683 .19005 m
.90058 .19005 L
s
.89683 .20712 m
.90058 .20712 L
s
.89683 .24127 m
.90058 .24127 L
s
.89683 .25835 m
.90058 .25835 L
s
.89683 .27543 m
.90058 .27543 L
s
.89683 .2925 m
.90058 .2925 L
s
.89683 .32665 m
.90058 .32665 L
s
.89683 .34373 m
.90058 .34373 L
s
.89683 .3608 m
.90058 .3608 L
s
.89683 .37788 m
.90058 .37788 L
s
.89683 .41203 m
.90058 .41203 L
s
.89683 .4291 m
.90058 .4291 L
s
.89683 .44618 m
.90058 .44618 L
s
.89683 .46325 m
.90058 .46325 L
s
.89683 .4974 m
.90058 .4974 L
s
.89683 .51448 m
.90058 .51448 L
s
.89683 .53155 m
.90058 .53155 L
s
.89683 .54863 m
.90058 .54863 L
s
.89683 .03637 m
.90058 .03637 L
s
.89683 .0193 m
.90058 .0193 L
s
.89683 .00222 m
.90058 .00222 L
s
.89683 .58278 m
.90058 .58278 L
s
.89683 .59986 m
.90058 .59986 L
s
.89683 .61693 m
.90058 .61693 L
s
.25 Mabswid
.89683 0 m
.89683 .61803 L
s
gsave
.5 .63053 -75 -4 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 22 translate 1 -1 scale
63.000 14.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 14.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(N) show
69.000 14.000 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(=) show
75.000 14.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(44) show
87.000 14.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.08737 0 m
.08977 .07298 L
.09247 .1417 L
.09492 .19271 L
.09959 .26862 L
.10216 .29893 L
.10458 .32231 L
.10683 .3399 L
.10923 .35465 L
.11188 .36684 L
.11434 .37522 L
.11567 .37874 L
.11711 .38161 L
.11777 .38254 L
.11848 .38373 L
.11974 .38505 L
.12094 .38596 L
.12208 .38642 L
.12332 .38645 L
.12402 .38639 L
.12466 .38652 L
.12573 .38599 L
.12688 .38525 L
.12896 .38354 L
.13142 .3809 L
.13366 .37775 L
.14313 .36067 L
.16393 .31877 L
.17307 .30255 L
.18311 .2874 L
.2018 .26593 L
.21202 .25746 L
.22158 .25124 L
.23199 .24603 L
.24187 .24236 L
.25073 .23994 L
.25575 .2389 L
.2604 .23812 L
.2655 .23747 L
.26817 .2372 L
.271 .23696 L
.27348 .23681 L
.27479 .23674 L
.27619 .23668 L
.27749 .23663 L
.27866 .2366 L
.27985 .23658 L
.28097 .23656 L
.28204 .23656 L
.28322 .23655 L
Mistroke
.28445 .23656 L
.2856 .23658 L
.28668 .2366 L
.28767 .23662 L
.28989 .2367 L
.29215 .2368 L
.29462 .23694 L
.29958 .23732 L
.30489 .23785 L
.30989 .23846 L
.31923 .23988 L
.3402 .24427 L
.36025 .24979 L
.37872 .25584 L
.41817 .27127 L
.45611 .28838 L
.4965 .30787 L
.53538 .32674 L
.57671 .34568 L
.61652 .36161 L
.65482 .37363 L
.67457 .37813 L
.68455 .37989 L
.68991 .38067 L
.69557 .38136 L
.70038 .38183 L
.70292 .38204 L
.70565 .38223 L
.70815 .38237 L
.71043 .38246 L
.71153 .3825 L
.71273 .38254 L
.71385 .38256 L
.71489 .38258 L
.71609 .38259 L
.71738 .3826 L
.7186 .38259 L
.71971 .38258 L
.72101 .38256 L
.72175 .38254 L
.72243 .38252 L
.72501 .38242 L
.72642 .38235 L
.72774 .38227 L
.73021 .3821 L
.73574 .38155 L
.7404 .38091 L
.74551 .38001 L
.75583 .3775 L
.76539 .37421 L
Mistroke
.77431 .37015 L
.78477 .36396 L
.79468 .35638 L
.81324 .33666 L
.8229 .32302 L
.83316 .30579 L
.85159 .26917 L
.86097 .25044 L
.86589 .24204 L
.86858 .23825 L
.87107 .23544 L
.87221 .23444 L
.87328 .23367 L
.87451 .23302 L
.87563 .23267 L
.87688 .23259 L
.87802 .23281 L
.87928 .23342 L
.87992 .23389 L
.88061 .23453 L
.88175 .23589 L
.88279 .2375 L
.88391 .23965 L
.88513 .24252 L
.8873 .24915 L
.88936 .25749 L
.89192 .27114 L
.8947 .29064 L
.89731 .31443 L
.89971 .34169 L
.90427 .41084 L
.90657 .45601 L
.90908 .51509 L
Mfstroke
.90908 .51509 m
.91241 .61803 L
s
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore

%%Trailer
%%EOF
